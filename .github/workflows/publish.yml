# publishes a release to nmpjs.com

name: publish
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version. A version that is present in the S3 bucket. (like 0.5.0-alpha1)'
        required: true
        default: ''
env:
  NODEJS_VERSION: 12
  NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_S3_NIGHTLY_BASEURI: https://wify-tally-build.s3.eu-central-1.amazonaws.com
  AWS_S3_NIGHTLY_BUCKET: wify-tally-build
  AWS_S3_NIGHTLY_REGION: eu-central-1

jobs:
  publish-npm:
    runs-on: "ubuntu-latest"
    steps:
      - name: Use node.js ${{ env.NODEJS_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODEJS_VERSION }}
      - name: Check if already uploaded
        id: preflight
        run: |
          if curl -L -f "https://npmjs.com/package/wifi-tally/v/${{ github.event.inputs.version }}" -o /dev/null; then
            # package already uploaded
            echo "::set-output name=check::err"
          else
            # package not yet uploaded
            echo "::set-output name=check::ok"
          fi

      - name: Upload to npm
        if: "${{ steps.preflight.outputs.check == 'ok' }}"
        run: |
          npm set //registry.npmjs.org/:_authToken=${{ env.NPM_AUTH_TOKEN }}

          SOURCE="${AWS_S3_NIGHTLY_BASEURI}/wifi-tally-${{ github.event.inputs.version }}/wifi-tally-${{ github.event.inputs.version }}.tgz"

          echo "releasing $SOURCE to npm"
          npm publish "${SOURCE}"

  # ###
  #
  # Create a Github Release and upload artifacts
  #
  # ###
  release-github:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.version != '' }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_NIGHTLY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_NIGHTLY_KEY }}
          aws-region: ${{ env.AWS_S3_NIGHTLY_REGION }}
      - name: Get from S3
        id: s3
        run: |
          aws s3 sync s3://${AWS_S3_NIGHTLY_BUCKET}/ . --exclude "*" --include "wifi-tally-${{ github.event.inputs.version }}/*"
          ALL_OBJECTS=$(find . -type f -name "wifi-tally-*")

          # outputting multiline string
          # see https://trstringer.com/github-actions-multiline-strings/
          ALL_OBJECTS="${ALL_OBJECTS//'%'/'%25'}"
          ALL_OBJECTS="${ALL_OBJECTS//$'\n'/'%0A'}"
          ALL_OBJECTS="${ALL_OBJECTS//$'\r'/'%0D'}"
          echo "::set-output name=files::$ALL_OBJECTS"
      - uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.version }}
          name: "v${{ github.event.inputs.version }}"
          # no regex possible, so we test for the most likely cases that deviate from the "va.b.c" pattern
          prerelease: ${{ contains(github.event.inputs.version, '-') || contains(github.event.inputs.version, '+') || contains(github.event.inputs.version, 'alpha') || contains(github.event.inputs.version, 'beta') || contains(github.event.inputs.version, 'rc') }}
          draft: true
          files: "${{ steps.s3.outputs.files }}"
          gzip: false
          allow_override: true
